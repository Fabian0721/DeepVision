import torchfrom PIL import Imagefrom numpy import asarrayimport numpy as npdef main():    # Load the image    image = Image.open("dog.jpg")    # image.show(title="Doggy", command=None)    # Convert image to numpy array    data = np.array(image)    print(type(data))    print(data.flags)    # Summarize shape    print(data.shape)    # Print value of each pixel of the NumPy array image    # print(data)    # # Create Pillow image    # reverse_image = Image.fromarray(data)    # print(type(reverse_image))    #    # # Summarize image details    # print(reverse_image.mode)    # print(reverse_image.size)    # From numpy array to torch tensor    torch_data_tensor = torch.from_numpy(data)    print(torch_data_tensor.size())    # Change axis of tensor    permuted_torch_data_tensor = torch_data_tensor.permute(1, 2, 0)    print(permuted_torch_data_tensor.size())    # From torch tensor to numpy array    numpy_array = permuted_torch_data_tensor.numpy()    print(numpy_array.shape)    # reversed_image = Image.fromarray(np.uint8(numpy_array))    # reversed_image = Image.fromarray((numpy_array * 255).astype(np.uint8))    # reversed_image.save("reversedImage.jpg")    # reversed_image.show(title="Reversed Image", command=None)    x = np.random.rand(5, 5, 1)    # print(x)    w = np.random.rand(2, 2, 1)if __name__ == "__main__":    main()